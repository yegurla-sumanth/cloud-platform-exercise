name: ci

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_REPO_NAME: catgif-app

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Configure AWS creds (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform fmt & validate
        working-directory: ./terraform
        run: |
          terraform fmt -recursive
          terraform init -upgrade
          terraform validate

      # Create ECR repo first so docker push succeeds
      - name: Create ECR repository (targeted apply)
        working-directory: ./terraform
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: |
          terraform apply -auto-approve \
            -var-file=envs/dev/terraform.tfvars \
            -target=module.ecs_service.aws_ecr_repository.repo

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.IMAGE_REPO_NAME }}:$IMAGE_TAG ./app
          docker push $ECR_REGISTRY/${{ env.IMAGE_REPO_NAME }}:$IMAGE_TAG

      - name: Terraform plan (full stack)
        working-directory: ./terraform
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: terraform plan -var-file=envs/dev/terraform.tfvars

      - name: Terraform apply (full stack)
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: terraform apply -auto-approve -var-file=envs/dev/terraform.tfvars
